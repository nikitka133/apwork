# Generated by Django 4.1 on 2022-09-03 14:00

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Учетная запись активна?')),
                ('role', models.CharField(choices=[('fr', 'Фрилансер'), ('em', 'Работодатель')], default='Фрилансер', max_length=20, verbose_name='Роль участия')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(default='+7', max_length=12, null=True, region=None, unique=True, verbose_name='Номер телефона')),
                ('balance', models.PositiveIntegerField(blank=True, default=0)),
                ('point', models.SmallIntegerField(default=20, verbose_name='Ворк')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_cat', models.CharField(max_length=50, verbose_name='Категория')),
                ('slug_cat', models.SlugField(max_length=100, null=True, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=250, unique=True, verbose_name='Файл чата')),
                ('name_chat', models.CharField(max_length=150, unique=True, verbose_name='Название файла чата')),
                ('job_name', models.CharField(max_length=100, null=True, verbose_name='Название работы для чата')),
                ('create_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('tittle_sub_cat', models.CharField(max_length=50, verbose_name='Подкатегория')),
                ('slug_sub_cat', models.SlugField(max_length=150, primary_key=True, serialize=False, unique=True, verbose_name='URL')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Подкатегория',
                'verbose_name_plural': 'Подкатегории',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('description', models.TextField(max_length=2000, verbose_name='Описание')),
                ('expired_date', models.DateField(blank=True, null=True, verbose_name='Дедлайн')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('min_price', models.PositiveIntegerField(blank=True, verbose_name='Минимальная оплата')),
                ('max_price', models.PositiveIntegerField(verbose_name='Максимальная оплата')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активно')),
                ('processing', models.BooleanField(default=False, verbose_name='В работе')),
                ('offer', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('author', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Работодатель')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.subcategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Работа',
                'verbose_name_plural': 'Работа',
            },
        ),
    ]
